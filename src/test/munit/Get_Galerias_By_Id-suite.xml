<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="Get_Galerias_By_Id-suite.xml" />
	<munit:test name="Get_Galerias_By_Id_flow-test" doc:id="8f6be7b2-0785-43b0-85f3-3783d7066e90" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Obras por Id galeria" doc:id="758c0809-48f2-4f5c-b760-35e88ed64c54" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="edbbf244-b6f4-4788-b088-3a8ce847a6e4" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json  --- readUrl('classpath://GetGaleriasByIdflowtest\mock_payload.dwl')]" mediaType="application/json " encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="id_galeria" value="#[output application/json --- readUrl('classpath://GetGaleriasByIdflowtest\mock_variable_.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://GetGaleriasByIdflowtest\mock_variable_1.dwl')]" />
						<munit-tools:variable key="galeria" value="#[output application/json --- readUrl('classpath://GetGaleriasByIdflowtest\mock_variable_2.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Get Galeria by Id" doc:id="acb87a91-b1c2-4b94-b09f-9a7c26366a45" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="31c3b65a-2636-4b0b-aea0-51858848cc6e" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json  --- readUrl('classpath://GetGaleriasByIdflowtest\mock_payload1.dwl')]" mediaType="application/json " encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://GetGaleriasByIdflowtest\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://GetGaleriasByIdflowtest\mock_variable_3.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:spy doc:name="Spy Transform Message" doc:id="9f5eb8b8-6a79-43b7-8ac8-bf75928daf93" processor="ee:transform">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4437825b-cafc-4d9f-9142-3d0cb36c5a1b" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:before-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="c6acbcda-671b-447c-95bf-8bc10b0a1799" message="The payload does not match">
						<munit-tools:that ><![CDATA[#[%dw 2.0
import GetGaleriasByIdflowtest::spy_assert_payload
---
spy_assert_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:before-call>
				<munit-tools:after-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="c1bdfc79-902e-4381-85c6-f64a37a068f6" message="The payload does not match">
						<munit-tools:that ><![CDATA[#[%dw 2.0
import GetGaleriasByIdflowtest::spy_assert_payload1
---
spy_assert_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:after-call>
			</munit-tools:spy>
			<munit:set-event doc:name="Set Input" doc:id="13dd61c7-1131-4331-908e-fb2997d7bc89" >
				<munit:attributes value="#[readUrl('classpath://GetGaleriasByIdflowtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://GetGaleriasByIdflowtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to Get_Galerias_By_Id_flow" doc:id="0240a995-67f5-4e71-9259-665244bb8e2f" name="Get_Galerias_By_Id_flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="445f497b-96b2-4016-9258-3d34c08de025" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import GetGaleriasByIdflowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Id galeria" doc:id="f5ef6d34-94e4-4cab-b877-9c2170e1a1f4" processor="set-variable" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b70894e9-237a-447f-8beb-abf199b413ce" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Galeria" doc:id="f243d6b5-3db4-48dd-a79d-2a409d5db37d" processor="set-variable" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="193d29ad-30cb-46dc-8c7c-5b7bb56f4fcf" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="577c438e-bf51-4c74-b8e0-ff16808c3681" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4437825b-cafc-4d9f-9142-3d0cb36c5a1b" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>


</mule>
